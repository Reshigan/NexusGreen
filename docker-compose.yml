# Nexus Green Production Docker Compose
version: '3.8'

services:
  nexus-green:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: nexus-green-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - VITE_APP_NAME=Nexus Green
      - VITE_APP_VERSION=4.0.0
      - VITE_API_URL=http://localhost:3001
      - VITE_ENVIRONMENT=production
      - VITE_COMPANY_NAME=SolarTech Solutions (Pty) Ltd
      - VITE_COMPANY_REG=2019/123456/07
      - VITE_PPA_RATE=1.20
    volumes:
      - ./docker/ssl:/etc/nginx/ssl:ro
      - ./docker/logs:/var/log/nginx
    networks:
      - nexus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.nexusgreen.service=frontend"
      - "com.nexusgreen.version=4.0.0"

  # Optional: API backend service (uncomment when ready)
  # nexus-api:
  #   build:
  #     context: ./api
  #     dockerfile: Dockerfile
  #   container_name: nexus-green-api
  #   restart: unless-stopped
  #   ports:
  #     - "3001:3001"
  #   environment:
  #     - NODE_ENV=production
  #     - PORT=3001
  #   networks:
  #     - nexus-network
  #   depends_on:
  #     - nexus-db

  # Optional: Database service (uncomment when ready)
  # nexus-db:
  #   image: postgres:15-alpine
  #   container_name: nexus-green-db
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_DB=nexusgreen
  #     - POSTGRES_USER=nexususer
  #     - POSTGRES_PASSWORD=nexuspass123
  #   volumes:
  #     - nexus-db-data:/var/lib/postgresql/data
  #   networks:
  #     - nexus-network

networks:
  nexus-network:
    driver: bridge
    name: nexus-green-network

volumes:
  nexus-db-data:
    name: nexus-green-db-data