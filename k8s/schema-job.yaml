apiVersion: batch/v1
kind: Job
metadata:
  name: nexus-db-schema
  namespace: nexus-green
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: db-schema
        image: postgres:15
        env:
        - name: PGHOST
          value: "postgres"
        - name: PGPORT
          value: "5432"
        - name: PGDATABASE
          value: "nexus_green"
        - name: PGUSER
          value: "nexus_user"
        - name: PGPASSWORD
          value: "nexus_password_2024"
        command:
        - /bin/bash
        - -c
        - |
          echo "Waiting for PostgreSQL to be ready..."
          until pg_isready -h $PGHOST -p $PGPORT -U $PGUSER; do
            echo "PostgreSQL is not ready yet, waiting..."
            sleep 2
          done
          echo "PostgreSQL is ready, creating database schema..."
          psql -h $PGHOST -p $PGPORT -U $PGUSER -d $PGDATABASE -f /schema/01-schema.sql
          echo "Database schema created successfully!"
        volumeMounts:
        - name: schema-script
          mountPath: /schema
          readOnly: true
      volumes:
      - name: schema-script
        configMap:
          name: db-schema-script
  backoffLimit: 3
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-schema-script
  namespace: nexus-green
data:
  01-schema.sql: |
    -- Nexus Green Database Schema
    -- Solar Energy Management System

    -- Enable UUID extension
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

    -- Companies table
    CREATE TABLE companies (
        id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
        name VARCHAR(255) NOT NULL,
        registration_number VARCHAR(100),
        address TEXT,
        phone VARCHAR(50),
        email VARCHAR(255),
        website VARCHAR(255),
        logo_url VARCHAR(500),
        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
    );

    -- Users table
    CREATE TABLE users (
        id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
        company_id UUID REFERENCES companies(id) ON DELETE CASCADE,
        email VARCHAR(255) UNIQUE NOT NULL,
        password_hash VARCHAR(255) NOT NULL,
        first_name VARCHAR(100) NOT NULL,
        last_name VARCHAR(100) NOT NULL,
        role VARCHAR(50) DEFAULT 'user',
        is_active BOOLEAN DEFAULT true,
        last_login TIMESTAMP WITH TIME ZONE,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
    );

    -- Solar installations table
    CREATE TABLE installations (
        id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
        company_id UUID REFERENCES companies(id) ON DELETE CASCADE,
        name VARCHAR(255) NOT NULL,
        location VARCHAR(255),
        latitude DECIMAL(10, 8),
        longitude DECIMAL(11, 8),
        capacity_kw DECIMAL(10, 2) NOT NULL,
        installation_date DATE,
        system_type VARCHAR(100),
        panel_count INTEGER,
        inverter_type VARCHAR(100),
        status VARCHAR(50) DEFAULT 'active',
        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
    );

    -- Energy generation data table
    CREATE TABLE energy_generation (
        id SERIAL PRIMARY KEY,
        installation_id UUID REFERENCES installations(id) ON DELETE CASCADE,
        date DATE NOT NULL,
        hour INTEGER CHECK (hour >= 0 AND hour <= 23),
        energy_kwh DECIMAL(10, 3) NOT NULL,
        irradiance DECIMAL(8, 2), -- W/m²
        temperature DECIMAL(5, 2), -- °C
        weather_condition VARCHAR(50),
        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        UNIQUE(installation_id, date, hour)
    );

    -- Financial data table
    CREATE TABLE financial_data (
        id SERIAL PRIMARY KEY,
        installation_id UUID REFERENCES installations(id) ON DELETE CASCADE,
        date DATE NOT NULL,
        energy_sold_kwh DECIMAL(10, 3) NOT NULL,
        revenue DECIMAL(12, 2) NOT NULL,
        ppa_rate DECIMAL(8, 4), -- $/kWh
        savings DECIMAL(12, 2),
        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        UNIQUE(installation_id, date)
    );

    -- Alerts table
    CREATE TABLE alerts (
        id SERIAL PRIMARY KEY,
        installation_id UUID REFERENCES installations(id) ON DELETE CASCADE,
        type VARCHAR(50) NOT NULL, -- 'performance', 'maintenance', 'system', 'weather'
        severity VARCHAR(20) NOT NULL, -- 'info', 'warning', 'error', 'critical'
        title VARCHAR(255) NOT NULL,
        message TEXT,
        is_resolved BOOLEAN DEFAULT false,
        resolved_at TIMESTAMP WITH TIME ZONE,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
    );

    -- Maintenance records table
    CREATE TABLE maintenance (
        id SERIAL PRIMARY KEY,
        installation_id UUID REFERENCES installations(id) ON DELETE CASCADE,
        type VARCHAR(100) NOT NULL, -- 'Preventive', 'Corrective', 'Emergency', 'Compliance'
        description TEXT NOT NULL,
        scheduled_date DATE,
        completed_date DATE,
        status VARCHAR(50) DEFAULT 'scheduled', -- 'scheduled', 'in_progress', 'completed', 'cancelled', 'urgent'
        cost DECIMAL(10, 2),
        technician VARCHAR(255),
        notes TEXT,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
    );

    -- Create indexes for better performance
    CREATE INDEX idx_energy_generation_installation_date ON energy_generation(installation_id, date);
    CREATE INDEX idx_energy_generation_date_hour ON energy_generation(date, hour);
    CREATE INDEX idx_financial_data_installation_date ON financial_data(installation_id, date);
    CREATE INDEX idx_alerts_installation_severity ON alerts(installation_id, severity);
    CREATE INDEX idx_alerts_resolved ON alerts(is_resolved);
    CREATE INDEX idx_maintenance_installation_status ON maintenance(installation_id, status);
    CREATE INDEX idx_maintenance_scheduled_date ON maintenance(scheduled_date);
    CREATE INDEX idx_installations_company ON installations(company_id);
    CREATE INDEX idx_users_company ON users(company_id);
    CREATE INDEX idx_users_email ON users(email);

    -- Create updated_at trigger function
    CREATE OR REPLACE FUNCTION update_updated_at_column()
    RETURNS TRIGGER AS $$
    BEGIN
        NEW.updated_at = CURRENT_TIMESTAMP;
        RETURN NEW;
    END;
    $$ language 'plpgsql';

    -- Create triggers for updated_at columns
    CREATE TRIGGER update_companies_updated_at BEFORE UPDATE ON companies
        FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

    CREATE TRIGGER update_users_updated_at BEFORE UPDATE ON users
        FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

    CREATE TRIGGER update_installations_updated_at BEFORE UPDATE ON installations
        FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

    CREATE TRIGGER update_alerts_updated_at BEFORE UPDATE ON alerts
        FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

    CREATE TRIGGER update_maintenance_updated_at BEFORE UPDATE ON maintenance
        FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

    -- Insert default admin user (password: admin123)
    INSERT INTO companies (id, name, registration_number, address, phone, email, website, logo_url) VALUES
    ('550e8400-e29b-41d4-a716-446655440000', 'NexusGreen Energy Solutions', 'NGES-2024-001', '1250 Renewable Energy Blvd, Suite 300, San Francisco, CA 94105', '+1-415-555-0100', 'contact@nexusgreen.energy', 'https://nexusgreen.energy', '/nexus-green-logo.svg');

    INSERT INTO users (id, company_id, email, password_hash, first_name, last_name, role, is_active) VALUES
    ('550e8400-e29b-41d4-a716-446655440010', '550e8400-e29b-41d4-a716-446655440000', 'admin@nexusgreen.energy', '$2b$12$LQv3c1yqBwlVHpPjrGNDKOHYUehHKh4+3z/SoBPjk1S4gqiFq/ZG.', 'Admin', 'User', 'admin', true);

    RAISE NOTICE 'Database schema created successfully with default admin user!';
    RAISE NOTICE 'Login credentials: admin@nexusgreen.energy / NexusGreen2024!';