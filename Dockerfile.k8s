# Nexus Green Kubernetes Dockerfile
# Multi-stage build optimized for Kubernetes deployment

# Stage 1: Build stage
FROM node:18-alpine AS builder

WORKDIR /app

# Set memory limits for builds
ENV NODE_OPTIONS="--max-old-space-size=3072"
ENV VITE_ENVIRONMENT=production

# Copy package files first for better caching
COPY package*.json ./

# Install ALL dependencies (including devDependencies for build)
RUN npm ci --include=dev --silent --no-audit --no-fund

# Copy source code
COPY . .

# Build the application with memory optimization
RUN npm run build

# Stage 2: Production stage
FROM nginx:alpine AS production

# Install curl for health checks
RUN apk add --no-cache curl

# Copy built application from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration for Kubernetes
COPY nginx/k8s.conf /etc/nginx/conf.d/default.conf

# Set proper permissions
RUN chown -R nginx:nginx /usr/share/nginx/html

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]