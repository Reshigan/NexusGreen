# ARM64 optimized multi-stage build for React frontend
FROM --platform=linux/arm64 node:20-alpine AS base

# Install only essential system dependencies
RUN apk add --no-cache python3 make g++

WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./

# Development stage
FROM base AS development
RUN npm ci --only=production --no-audit --no-fund
COPY . .
EXPOSE 3000
CMD ["npm", "start"]

# Build stage - optimized for ARM64 and low memory
FROM base AS build
# Limit Node.js memory usage during build
ENV NODE_OPTIONS="--max-old-space-size=1024"
RUN npm ci --no-audit --no-fund
COPY . .

# Build the React app
ENV NODE_ENV=production
ENV GENERATE_SOURCEMAP=false
ENV VITE_APP_NAME="SolarNexus"
ENV VITE_APP_VERSION="1.0.0"

RUN npm run build

# Production stage - serve with nginx
FROM --platform=linux/arm64 nginx:alpine AS production

# Copy custom nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy built React app
COPY --from=build /app/dist /usr/share/nginx/html

# Simple permissions setup
RUN chown -R nginx:nginx /usr/share/nginx/html

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]